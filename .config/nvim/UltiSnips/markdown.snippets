priority -50

global !p
def math():
	return vim.eval('vimtex#syntax#in_mathzone()') == '1'
endglobal

###################
# Text formatting #
###################

snippet /* "Comment"
<!-- ${1:${VISUAL}} -->$0
endsnippet

################
# Common stuff #
################

snippet link "Link to something"
[${1:${VISUAL:Text}}](${3:https://${2:www.url.com}})$0
endsnippet

snippet img "Image"
![${1:pic alt}](${2:path}${3/.+/ "/}${3:opt title}${3/.+/"/})$0
endsnippet

snippet ilc "Inline Code" i
\`${1:${VISUAL}}\`$0
endsnippet

snippet cbl "Codeblock" b
\`\`\`$1
${2:${VISUAL}}
\`\`\`
$0
endsnippet

snippet refl "Reference Link"
[${1:${VISUAL:Text}}][${2:id}]$0

[$2]:${4:https://${3:www.url.com}} "${5:$4}"
endsnippet

snippet fnt "Footnote"
[^${1:${VISUAL:Footnote}}]$0

[^$1]:${2:Text}
endsnippet

snippet detail "Disclosure"
<details${3: open=""}>
	${1:<summary>${2}</summary>}$0
</details>
endsnippet

snippet ::: "Fenced Div" b
::: $1
${2:${VISUAL}}
:::
$0
endsnippet

snippet :::{ "Fenced Div with Title" 
::: {.$1 title="$2"}
${3:${VISUAL}}
:::
$0
endsnippet
###########################
#          LATEX          #
###########################

# context "math()"
# extends tex
# snippet iff "iff" Ai
# \iff
# endsnippet
#
# snippet mk "Math" wA
# $${1}$`!p
# if t[2] and t[2][0] not in [',', '.', '?', '-', ' ']:
# 	snip.rv = ' '
# else:
# 	snip.rv = ''
# `$2
# endsnippet
#
# context "math()"
# snippet // "Fraction" iA
# \\frac{$1}{$2}$0
# endsnippet
#
# context "math()"
# snippet '((\d+)|(\d*)(\\)?([A-Za-z]+)((\^|_)(\{\d+\}|\d))*)/' "symbol frac" wrA
# \\frac{`!p snip.rv = match.group(1)`}{$1}$0
# endsnippet
#
# priority 1000
# context "math()"
# snippet '^.*\)/' "() frac" wrA
# `!p
# stripped = match.string[:-1]
# depth = 0
# i = len(stripped) - 1
# while True:
# 	if stripped[i] == ')': depth += 1
# 	if stripped[i] == '(': depth -= 1
# 	if depth == 0: break;
# 	i-=1
# snip.rv = stripped[0:i] + "\\frac{" + stripped[i+1:-1] + "}"
# `{$1}$0
# endsnippet
#
# context "math()"
# snippet '([A-Za-z])(\d)' "auto subscript" wrA
# `!p snip.rv = match.group(1)`_`!p snip.rv = match.group(2)`
# endsnippet
#
# context "math()"
# snippet '([A-Za-z])_(\d\d)' "auto subscript2" wrA
# `!p snip.rv = match.group(1)`_{`!p snip.rv = match.group(2)`}
# endsnippet
#
# context "math()"
# snippet != "equals" iA
# \neq 
# endsnippet
#
# context "math()"
# snippet ceil "ceil" iA
# \left\lceil $1 \right\rceil $0
# endsnippet
#
# context "math()"
# snippet floor "floor" iA
# \left\lfloor $1 \right\rfloor$0
# endsnippet
#
# context "math()"
# snippet () "left( right)" iA
# \left( ${1:${VISUAL}} \right) $0
# endsnippet
#
# context "math()"
# snippet lr( "left( right)" i
# \left( ${1:${VISUAL}} \right) $0
# endsnippet
#
# context "math()"
# snippet lr| "left| right|" i
# \left| ${1:${VISUAL}} \right| $0
# endsnippet
#
# context "math()"
# snippet lr{ "left\{ right\}" i
# \left\\{ ${1:${VISUAL}} \right\\} $0
# endsnippet
#
# context "math()"
# snippet lrb "left\{ right\}" i
# \left\\{ ${1:${VISUAL}} \right\\} $0
# endsnippet
#
# context "math()"
# snippet lr[ "left[ right]" i
# \left[ ${1:${VISUAL}} \right] $0
# endsnippet
#
# context "math()"
# snippet lra "leftangle rightangle" iA
# \left<${1:${VISUAL}} \right>$0
# endsnippet
#
# context "math()"
# snippet conj "conjugate" iA
# \overline{$1}$0
# endsnippet
#
# context "math()"
# snippet sum "sum" w
# \sum_{n=${1:1}}^{${2:\infty}} ${3:a_n z^n}
# endsnippet
#
# context "math()"
# snippet taylor "taylor" w
# \sum_{${1:k}=${2:0}}^{${3:\infty}} ${4:c_$1} (x-a)^$1 $0
# endsnippet
#
# context "math()"
# snippet lim "limit" w
# \lim_{${1:n} \to ${2:\infty}} 
# endsnippet
#
# context "math()"
# snippet limsup "limsup" w
# \limsup_{${1:n} \to ${2:\infty}} 
# endsnippet
#
# context "math()"
# snippet prod "product" w
# \prod_{${1:n=${2:1}}}^{${3:\infty}} ${4:${VISUAL}} $0
# endsnippet
#
# context "math()"
# snippet part "d/dx" w
# \frac{\partial ${1:V}}{\partial ${2:x}} $0
# endsnippet
#
# context "math()"
# snippet sq "\sqrt{}" iA
# \sqrt{${1:${VISUAL}}} $0
# endsnippet
#
# context "math()"
# snippet ooo "\infty" iA
# \infty
# endsnippet
#
# context "math()"
# snippet <= "leq" iA
# \le 
# endsnippet
#
# context "math()"
# snippet >= "geq" iA
# \ge 
# endsnippet
#
# context "math()"
# snippet EE "geq" iA
# \exists 
# endsnippet
#
# context "math()"
# snippet AA "forall" iA
# \forall 
# endsnippet
#
# context "math()"
# snippet xnn "xn" iA
# x_{n}
# endsnippet
#
# context "math()"
# snippet ynn "yn" iA
# y_{n}
# endsnippet
#
#
# context "math()"
# snippet xii "xi" iA
# x_{i}
# endsnippet
#
# context "math()"
# snippet yii "yi" iA
# y_{i}
# endsnippet
#
# context "math()"
# snippet xjj "xj" iA
# x_{j}
# endsnippet
#
# context "math()"
# snippet yjj "yj" iA
# y_{j}
# endsnippet
#
# context "math()"
# snippet xp1 "x" iA
# x_{n+1}
# endsnippet
#
# context "math()"
# snippet xmm "x" iA
# x_{m}
# endsnippet
#
# context "math()"
# snippet nabl "nabla" iA
# \nabla 
# endsnippet
#
# context "math()"
# snippet xx "cross" iA
# \times 
# endsnippet
#
# priority 100
# snippet ** "cdot" iA
# \cdot 
# endsnippet
#
# context "math()"
# snippet norm "norm" iA
# \|$1\|$0
# endsnippet
#
# priority 100
# context "math()"
# snippet '(?<!\\)(sin|cos|arccot|cot|csc|ln|log|exp|star|perp)' "ln" rwA
# \\`!p snip.rv = match.group(1)`
# endsnippet
#
# priority 300
# context "math()"
# snippet dint "integral" wA
# \int_{${1:-\infty}}^{${2:\infty}} ${3:${VISUAL}} $0
# endsnippet
#
# priority 200
# context "math()"
# snippet '(?<!\\)(arcsin|arccos|arctan|arccot|arccsc|arcsec|pi|zeta|int)' "ln" rwA
# \\`!p snip.rv = match.group(1)`
# endsnippet
#
# priority 100
# context "math()"
# snippet -> "to" iA
# \to 
# endsnippet
#
# priority 200
# context "math()"
# snippet <-> "leftrightarrow" iA
# \leftrightarrow
# endsnippet
#
# context "math()"
# snippet !> "mapsto" iA
# \mapsto 
# endsnippet
#
# context "math()"
# snippet invs "inverse" iA
# ^{-1}
# endsnippet
#
# context "math()"
# snippet compl "complement" iA
# ^{c}
# endsnippet
#
# context "math()"
# snippet \\\ "setminus" iA
# \setminus
# endsnippet
#
# context "math()"
# snippet set "set" wA
# \\{$1\\} $0
# endsnippet
#
# snippet || "mid" iA
# \mid 
# endsnippet
#
#
# context "math()"
# snippet cc "subset" Ai
# \subset 
# endsnippet
#
# context "math()"
# snippet notin "not in " iA
# \not\in 
# endsnippet
#
# context "math()"
# snippet inn "in " iA
# \in 
# endsnippet
#
# context "math()"
# snippet tt "text" iA
# \text{$1}$0
# endsnippet
#
# context "math()"
# snippet case "cases" wA
# \begin{cases}
# 	$1
# \end{cases}
# endsnippet
#
# priority 10
# context "math()"
# snippet "bar" "bar" riA
# \overline{$1}$0
# endsnippet
#
# priority 100
# context "math()"
# snippet "([a-zA-Z])bar" "bar" riA
# \overline{`!p snip.rv=match.group(1)`}
# endsnippet
#
# priority 10
# context "math()"
# snippet "hat" "hat" riA
# \hat{$1}$0
# endsnippet
#
# priority 100
# context "math()"
# snippet "([a-zA-Z])hat" "hat" riA
# \hat{`!p snip.rv=match.group(1)`}
# endsnippet

# vim:ft=snippets
